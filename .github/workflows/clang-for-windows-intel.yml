name: Clang for Windows Intel
on: 
  schedule:
    - cron:  '0 18 * * *'
  push:
    paths:
      - '.github/workflows/clang-for-windows-intel.yml'
  pull_request:
    paths:
      - '.github/workflows/clang-for-windows-intel.yml'
      
env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18969/w_BaseKit_p_2022.3.1.19798_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18976/w_HPCKit_p_2022.3.1.19755_offline.exe
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.dpcpp-compiler
      
      
jobs:
  clang-for-windows-bootstrap:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - msvc_arch: x64
            compiler: icx
    env:
      targetName: llvm-win-intel-${{ matrix.msvc_arch }}
      
    steps:
      - name: cache intel install
        id: cache-install
        uses: actions/cache@v2
        with:
          path: |
              C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
              C:\Program Files (x86)\Intel\oneAPI\compiler
          key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}

      - name: install intel
        if: steps.cache-install.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 https://github.com/oneapi-src/oneapi-ci.git oneapi-ci
          cd oneapi-ci
          scripts/install_windows.bat ${{ env.WINDOWS_HPCKIT_URL }} ${{ env.WINDOWS_CPP_COMPONENTS }}

      - name: Checkout llvm-project
        shell: cmd
        run: |
          git clone --depth=1 --single-branch --branch main https://github.com/llvm/llvm-project.git

      - name: build-msvc
        shell: cmd
        env:
          vc_arch: ${{ matrix.msvc_arch }}
        run: |
          dir "C:\Program Files (x86)\Intel\oneAPI\compiler"
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %vc_arch%
          call "C:\Program Files (x86)\Intel\oneAPI\compiler\2022.2.0\env\vars.bat"
          set PATH="C:\Program Files (x86)\Intel\oneAPI\compiler\2022.2.0\windows\bin-llvm\";%PATH%
          dir
          mkdir llvm-project\build
          dir llvm-project
          cd llvm-project\build
          cmake.exe -GNinja -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icx -DCMAKE_BUILD_TYPE=release -DLLVM_BUILD_TESTS=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld;compiler-rt;mlir" -DLLVM_TARGETS_TO_BUILD=X86 -DCMAKE_C_FLAGS="/utf-8" -DCMAKE_CXX_FLAGS="/utf-8" -DCMAKE_INSTALL_PREFIX=llvm_win_bin -DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=ON -DLLVM_USE_INTEL_JITEVENTS=ON -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_LIBXML2=ON -DLLVM_ENABLE_ZLIB=ON ..\llvm
          ninja
          ninja install
          del /s /q *.obj
          del /s /q *.cpp
          del /s /q *.cxx

      - name: upload executable artifact
        uses: actions/upload-artifact@v1
        with:
          path: llvm-project\build\llvm_win_bin\bin
          name: llvm-win-intel-${{ matrix.msvc_arch }}

      - name: upload devel artifact
        uses: actions/upload-artifact@v1
        with:
          path: llvm-project\build\llvm_win_bin\
          name: llvm-win-intel-${{ matrix.msvc_arch }}-dev

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.18
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go get
          go build -ldflags="-s -w" -o bin\transfer.exe
          cd ..
          
      - name: upload to own file server
        shell: cmd
        run: |
          set TRANSFER=%CD%\gopath\bin\transfer.exe
          cd llvm-project\build\llvm_win_bin\bin
          7z.exe a ..\llvm-win-intel-${{ matrix.msvc_arch }}.7z *
          cd ..
          dir
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@llvm-win-intel-${{ matrix.msvc_arch }}.7z" ${{ secrets.FILE_SERVER }}
          del /q llvm-win-intel-${{ matrix.msvc_arch }}.7z
          7z.exe a llvm-win-intel-${{ matrix.msvc_arch }}-dev.7z bin include lib libexec share
          dir
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@llvm-win-intel-${{ matrix.msvc_arch }}-dev.7z" ${{ secrets.FILE_SERVER }}
