name: mpv-build
on: 
  schedule:
    - cron:  '0 17 * * 2'
  push:
    paths:
      - '.github/workflows/mpvbuild.yml'
      - 'ios/**'
      - 'android/**'
  pull_request:
    paths:
      - '.github/workflows/mpvbuild.yml'
      - 'ios/**'
      - 'android/**'
jobs:
  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        mingw_arch: [MINGW64, MINGW32]
        include:
          - mingw_arch: MINGW64
            mingw_prefix: mingw-w64-x86_64
          - mingw_arch: MINGW32
            mingw_prefix: mingw-w64-i686
    steps: 
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.mingw_arch }}
          install: python ${{ matrix.mingw_prefix }}-pkg-config ${{ matrix.mingw_prefix }}-python3 ${{ matrix.mingw_prefix }}-gcc ${{ matrix.mingw_prefix }}-ffmpeg ${{ matrix.mingw_prefix }}-libjpeg-turbo ${{ matrix.mingw_prefix }}-lua51
      - name: checkout mpv
        run: |
          git clone --depth=1 https://github.com/mpv-player/mpv.git
      - name: build mpv
        shell: msys2 {0}
        run: |
          cd mpv
          /${{ matrix.mingw_arch }}/bin/python3.exe ./bootstrap.py
          env PATH=$PATH:/${{ matrix.mingw_arch }}/bin ./waf configure CC=gcc.exe --check-c-compiler=gcc --enable-libmpv-shared
          env PATH=$PATH:/${{ matrix.mingw_arch }}/bin ./waf build      
          cd ..
          mkdir binary
          cp mpv/build/mpv* binary/
          
      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: binary
          name: mpv-${{ matrix.target }}

      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go build -ldflags="-s -w" -o bin/transfer
          cd ..

      - name: upload to own file server
        shell: cmd
        run: |
          export GOPATH=$PWD/gopath
          cd binary
          7z a ../mpv-${{ matrix.target }}.7z *
          cd ..
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-${{ matrix.target }}.7z" ${{ secrets.FILE_SERVER }}
          sudo sysctl -w net.core.rmem_max=2500000
          $GOPATH/bin/transfer -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-${{ matrix.target }}.7z
          
  iOS:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [distribution, development]
    steps:      
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '11.7'
        
      - name: prepare dependencies
        run: |
          brew install yasm automake autoconf m4 p7zip

      - name: Check out code 
        uses: actions/checkout@v2
        with:
          ref: master

      - name: build mpv
        run: |
          pwd
          ls -l
          cd ios
          ./download.sh 
          ./build.sh -e ${{ matrix.target }}
          cd ..

      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: ios/lib
          name: mpv-ios-${{ matrix.target }}

      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go build -ldflags="-s -w" -o bin/transfer
          cd ..

      - name: upload to own file server
        run: |
          export GOPATH=$PWD/gopath
          cd ios
          7z a mpv-ios-${{ matrix.target }}.7z lib
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-ios-${{ matrix.target }}.7z" ${{ secrets.FILE_SERVER }}
          $GOPATH/bin/transfer -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-ios-${{ matrix.target }}.7z
          
  Android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [armv7l, arm64, x86, x86_64]
    steps:          
      - name: prepare toolchain
        run: |
          sudo apt-get update -qq;
          sudo apt-get install -qq nasm p7zip-full;
      - name: Check out code 
        uses: actions/checkout@v2
        with:
          ref: master

      - name: build mpv
        run: |
          pwd
          ls -l
          cd android
          ./download.sh 
          ./buildall.sh --arch ${{ matrix.target }} mpv
          cd ..

      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: android/prefix/${{ matrix.target }}/lib/
          name: mpv-android-${{ matrix.target }}

      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go build -ldflags="-s -w" -o bin/transfer
          cd ..

      - name: upload to own file server
        run: |
          export GOPATH=$PWD/gopath
          cd android/prefix/${{ matrix.target }}
          7z a mpv-android-${{ matrix.target }}.7z lib
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-android-${{ matrix.target }}.7z" ${{ secrets.FILE_SERVER }}
          $GOPATH/bin/transfer -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-android-${{ matrix.target }}.7z
