name: mpv-build
on: 
  schedule:
    - cron:  '0 17 * * *'
  push:
    paths:
      - '.github/workflows/mpvbuild.yml'
      - 'ios/**'
      - 'android/**'
  pull_request:
    paths:
      - '.github/workflows/mpvbuild.yml'
      - 'ios/**'
      - 'android/**'
jobs:
  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - mingw_arch: UCRT64
            c: gcc
            cxx: g++
            mingw_prefix: mingw-w64-ucrt-x86_64       
            oldpkg: http://mirrors.ustc.edu.cn/msys2/mingw/ucrt64/mingw-w64-ucrt-x86_64-headers-git-11.0.0.r404.g3a137bd87-1-any.pkg.tar.zst
          - mingw_arch: MINGW64
            c: gcc
            cxx: g++
            mingw_prefix: mingw-w64-x86_64         
            oldpkg: http://mirrors.ustc.edu.cn/msys2/mingw/mingw64/mingw-w64-x86_64-headers-git-11.0.0.r404.g3a137bd87-1-any.pkg.tar.zst
          - mingw_arch: CLANG64
            c: clang
            cxx: clang++
            mingw_prefix: mingw-w64-clang-x86_64   
            oldpkg: http://mirrors.ustc.edu.cn/msys2/mingw/clang64/mingw-w64-clang-x86_64-headers-git-11.0.0.r404.g3a137bd87-1-any.pkg.tar.zst
    steps: 
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.mingw_arch }}
          install: python ${{ matrix.mingw_prefix }}-boost ${{ matrix.mingw_prefix }}-cmake ${{ matrix.mingw_prefix }}-pkg-config ${{ matrix.mingw_prefix }}-python3 ${{ matrix.mingw_prefix }}-gcc ${{ matrix.mingw_prefix }}-ffmpeg ${{ matrix.mingw_prefix }}-libjpeg-turbo ${{ matrix.mingw_prefix }}-lua51 ${{ matrix.mingw_prefix }}-meson  ${{ matrix.mingw_prefix }}-xxhash ${{ matrix.mingw_prefix }}-glslang ${{ matrix.mingw_prefix }}-SDL2_image ${{ matrix.mingw_prefix }}-libunwind ${{ matrix.mingw_prefix }}-libcdio  ${{ matrix.mingw_prefix }}-libcdio-paranoia  ${{ matrix.mingw_prefix }}-libdvdnav  ${{ matrix.mingw_prefix }}-rubberband  ${{ matrix.mingw_prefix }}-uchardet  ${{ matrix.mingw_prefix }}-vapoursynth ${{ matrix.mingw_prefix }}-mujs ${{ matrix.mingw_prefix }}-angleproject
          
      - run: |
          git clone https://github.com/missdeer/mingwdeployqt.git
          
      - name: Build mingwdeployqt
        shell: msys2 {0}
        run: |
          cd mingwdeployqt
          mkdir build
          cd build
          env PATH=$PATH:/${{ matrix.mingw_arch }}/bin cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ matrix.c }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -G Ninja ..
          ninja
          cp mingwdeployqt.exe /${{ matrix.mingw_arch }}/bin/
          cd ../..
         
      - name: checkout mpv
        run: |
          git clone --depth=1 https://github.com/mpv-player/mpv.git
      - name: build mpv
        shell: msys2 {0}
        run: |                                  
          cd mpv
          env PATH=/${{ matrix.mingw_arch }}/bin/ meson setup build --prefix=/${{ matrix.mingw_arch }} --werror -Dc_args="-Wno-error=deprecated -Wno-error=deprecated-declarations" -D cdda=enabled -D d3d-hwaccel=enabled -D d3d11=enabled -D dvdnav=enabled -D jpeg=enabled -D lcms2=enabled -D libarchive=enabled -D libbluray=enabled -D libmpv=true -D lua=enabled -D rubberband=enabled -D shaderc=enabled -D spirv-cross=enabled -D tests=false -D uchardet=enabled -D vapoursynth=enabled -D javascript=enabled  -D egl-angle-win32=enabled -D vulkan=disabled
          env PATH=/${{ matrix.mingw_arch }}/bin/ meson compile -C build
          cd ..
          mkdir binary
          cp mpv/build/mpv.exe binary/
          cp mpv/build/mpv.com binary/
          cp mpv/build/*mpv.dll.a binary/
          cp mpv/build/*mpv*.dll binary/
          export BINARY=$PWD/binary
          env PATH=$PATH:/${{ matrix.mingw_arch }}/bin /${{ matrix.mingw_arch }}/bin/mingwdeployqt.exe $PWD/binary/mpv.exe
          find $PWD/binary -name '*mpv*.dll' -type f -exec env PATH=$PATH:/${{ matrix.mingw_arch }}/bin /${{ matrix.mingw_arch }}/bin/mingwdeployqt.exe {} \;
                    
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: binary
          name: mpv-${{ matrix.mingw_prefix }}

      - name: Set up Go 
        uses: actions/setup-go@v2
        with:
          go-version: 1.22
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go get
          go build -ldflags="-s -w" -o bin\transfer.exe
          cd ..

      - name: upload to own file server
        shell: cmd
        run: |
          set GOPATH=%CD%\gopath
          cd binary
          7z a ..\mpv-${{ matrix.mingw_prefix }}.7z *
          cd ..
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-${{ matrix.mingw_prefix }}.7z" ${{ secrets.FILE_SERVER }}
          %GOPATH%\bin\transfer.exe -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-${{ matrix.mingw_prefix }}.7z
     
  Android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [armv7l, arm64, x86, x86_64]
    steps:          
      - name: prepare toolchain
        run: |
          sudo apt-get update -qq;
          sudo apt-get install -qq nasm p7zip-full  autoconf pkg-config libtool ninja-build python3-pip;
          sudo pip3 install meson
          
      - name: Check out code 
        uses: actions/checkout@v2
        with:
          ref: master

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin

      - name: build mpv
        run: |
          pwd
          ls -l
          cd android
          ./include/ci.sh export >>$GITHUB_ENV
          ./include/ci.sh install
          ./include/ci.sh build
          mkdir prefix/${{ matrix.target }}/lib
          find . -name '*.a' -o -name '*.so' -type f -exec cp {} prefix/${{ matrix.target }}/lib/ \;
          cd ..

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: android/prefix/${{ matrix.target }}/lib/
          name: mpv-android-${{ matrix.target }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go get
          go build -ldflags="-s -w" -o bin/transfer
          cd ..

      - name: upload to own file server
        run: |
          export GOPATH=$PWD/gopath
          cd android/prefix/${{ matrix.target }}
          7z a mpv-android-${{ matrix.target }}.7z lib
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-android-${{ matrix.target }}.7z" ${{ secrets.FILE_SERVER }}
          sudo sysctl -w net.core.rmem_max=2500000
          $GOPATH/bin/transfer -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-android-${{ matrix.target }}.7z
