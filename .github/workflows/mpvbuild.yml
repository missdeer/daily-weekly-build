name: mpv-build
on: 
  schedule:
    - cron:  '0 17 * * *'
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
jobs:
  Windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-w64-mingw32.static, i686-w64-mingw32.static]
    steps:
      - name: cache mxe
        id: cache-mxe
        uses: actions/cache@v2
        with:
          path: mxe
          key: ${{ matrix.target }}-mxe
      - name: prepare mxe
        if: steps.cache-mxe.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update -qq ;
          sudo apt-get install -qq autopoint gperf intltool libltdl-dev libtool-bin lzip p7zip-full;
          git clone --depth=1 https://github.com/mxe/mxe mxe
          cd mxe
          echo "JOBS := 4" >> settings.mk
          echo "MXE_TARGETS := ${{ matrix.target }}" >> settings.mk
          make gcc ffmpeg libass jpeg lua
          cd ..
      - name: checkout mpv
        run: |
          git clone --depth=1 https://github.com/mpv-player/mpv.git
      - name: build mpv
        run: |
          cd mpv
          ./bootstrap.py
          env PATH=$PWD/../mxe/usr/bin:$PATH DEST_OS=win32 TARGET=${{ matrix.target }} ./waf configure --enable-libmpv-shared 
          env PATH=$PWD/../mxe/usr/bin:$PATH DEST_OS=win32 TARGET=${{ matrix.target }} ./waf build          
          cd ..
          mkdir binary
          cp mpv/build/mpv* binary/
      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: binary
          name: mpv-${{ matrix.target }}

      - name: upload to own file server
        run: |
          cd binary
          7z a ../mpv-${{ matrix.target }}.zip *
          cd ..
          dir
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-${{ matrix.target }}.zip" ${{ secrets.FILE_SERVER }}
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-${{ matrix.target }}.zip" ${{ secrets.FILE_SERVER2 }}
          
  iOS:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [distribution, development]
    steps:      
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '11.7'
        
      - name: prepare dependencies
        run: |
          brew install yasm automake autoconf m4 p7zip

      - name: Check out code 
        uses: actions/checkout@v2
        with:
          ref: master

      - name: build mpv
        run: |
          pwd
          ls -l
          cd ios
          ./download.sh 
          ./build.sh -e ${{ matrix.target }}
          cd ..

      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: ios/lib
          name: mpv-ios-${{ matrix.target }}

      - name: upload to own file server
        run: |
          cd ios
          7z a mpv-ios-${{ matrix.target }}.zip lib
          dir
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-ios-${{ matrix.target }}.zip" ${{ secrets.FILE_SERVER }}
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-ios-${{ matrix.target }}.zip" ${{ secrets.FILE_SERVER2 }}
          
  Android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [armv7l, arm64, x86, x86_64]
    steps:          
      - name: prepare toolchain
        run: |
          sudo apt-get update -qq;
          sudo apt-get install -qq nasm p7zip-full;
      - name: Check out code 
        uses: actions/checkout@v2
        with:
          ref: master

      - name: build mpv
        run: |
          pwd
          ls -l
          cd android
          ./download.sh 
          ./buildall.sh --arch ${{ matrix.target }} mpv
          cd ..

      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: android/prefix/${{ matrix.target }}/lib/
          name: mpv-android-${{ matrix.target }}

      - name: upload to own file server
        run: |
          cd android/prefix/${{ matrix.target }}
          7z a mpv-android-${{ matrix.target }}.zip lib
          dir
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-android-${{ matrix.target }}.zip" ${{ secrets.FILE_SERVER }}
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-android-${{ matrix.target }}.zip" ${{ secrets.FILE_SERVER2 }}
