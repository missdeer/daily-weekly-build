name: mpv-build
on: 
  schedule:
    - cron:  '0 17 * * *'
  push:
    paths:
      - '.github/workflows/mpvbuild.yml'
      - 'ios/**'
      - 'android/**'
  pull_request:
    paths:
      - '.github/workflows/mpvbuild.yml'
      - 'ios/**'
      - 'android/**'
jobs:
  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - mingw_arch: UCRT64
            c: gcc
            cxx: g++
            mingw_prefix: mingw-w64-ucrt-x86_64
          - mingw_arch: MINGW64
            c: gcc
            cxx: g++
            mingw_prefix: mingw-w64-x86_64
          - mingw_arch: CLANG64
            c: clang
            cxx: clang++
            mingw_prefix: mingw-w64-clang-x86_64
    steps: 
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.mingw_arch }}
          install: python ${{ matrix.mingw_prefix }}-qt5 ${{ matrix.mingw_prefix }}-cmake ${{ matrix.mingw_prefix }}-pkg-config ${{ matrix.mingw_prefix }}-python3 ${{ matrix.mingw_prefix }}-gcc ${{ matrix.mingw_prefix }}-ffmpeg ${{ matrix.mingw_prefix }}-libjpeg-turbo ${{ matrix.mingw_prefix }}-lua51 ${{ matrix.mingw_prefix }}-meson 
          
      - run: |
          git clone https://github.com/missdeer/mingwdeployqt.git
          
      - name: Build mingwdeployqt
        shell: msys2 {0}
        run: |
          cd mingwdeployqt
          mkdir build
          cd build
          env PATH=$PATH:/${{ matrix.mingw_arch }}/bin cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ matrix.c }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -G Ninja ..
          ninja
          cp mingwdeployqt.exe /${{ matrix.mingw_arch }}/bin/
          cd ../..

      - run: |
          git clone --recursive https://code.videolan.org/videolan/libplacebo
          
      - name: Build libplacebo
        shell: msys2 {0}
        run: |
          pacman -R ${{ matrix.mingw_prefix }}-libplacebo
          cd libplacebo
          DIR=./build
          env PATH=/${{ matrix.mingw_arch }}/bin/ meson setup build --prefix=/${{ matrix.mingw_arch }}
          env PATH=/${{ matrix.mingw_arch }}/bin/ meson compile -C build
          env PATH=/${{ matrix.mingw_arch }}/bin/ meson install -C build
          
      - name: checkout mpv
        run: |
          git clone --depth=1 https://github.com/mpv-player/mpv.git
      - name: build mpv
        shell: msys2 {0}
        run: |
          cd mpv
          env PATH=/${{ matrix.mingw_arch }}/bin/ meson setup build --prefix=/${{ matrix.mingw_arch }} -Dlibmpv=true
          env PATH=/${{ matrix.mingw_arch }}/bin/ meson compile -C build
          cd ..
          mkdir binary
          cp mpv/build/mpv.exe binary/
          cp mpv/build/*mpv.dll.a binary/
          cp mpv/build/*mpv*.dll binary/
          export BINARY=$PWD/binary
          env PATH=$PATH:/${{ matrix.mingw_arch }}/bin /${{ matrix.mingw_arch }}/bin/mingwdeployqt.exe $PWD/binary/mpv.exe
          find $PWD/binary -name '*mpv*.dll' -type f -exec env PATH=$PATH:/${{ matrix.mingw_arch }}/bin /${{ matrix.mingw_arch }}/bin/mingwdeployqt.exe {} \;
                    
      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: binary
          name: mpv-${{ matrix.mingw_prefix }}

      - name: Set up Go 
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go get
          go build -ldflags="-s -w" -o bin\transfer.exe
          cd ..

      - name: upload to own file server
        shell: cmd
        run: |
          set GOPATH=%CD%\gopath
          cd binary
          7z a ..\mpv-${{ matrix.mingw_prefix }}.7z *
          cd ..
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-${{ matrix.mingw_prefix }}.7z" ${{ secrets.FILE_SERVER }}
          %GOPATH%\bin\transfer.exe -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-${{ matrix.mingw_prefix }}.7z
          
  iOS:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [distribution, development]
    steps:              
      - name: prepare dependencies
        run: |
          brew install yasm automake autoconf m4 p7zip meson

      - name: Check out code 
        uses: actions/checkout@v2
        with:
          ref: master

      - name: build mpv
        run: |
          pwd
          ls -l
          cd ios
          ./download.sh 
          ./build.sh -e ${{ matrix.target }}
          cd ..

      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: ios/lib
          name: mpv-ios-${{ matrix.target }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go get
          go build -ldflags="-s -w" -o bin/transfer
          cd ..

      - name: upload to own file server
        run: |
          export GOPATH=$PWD/gopath
          cd ios
          7z a mpv-ios-${{ matrix.target }}.7z lib
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-ios-${{ matrix.target }}.7z" ${{ secrets.FILE_SERVER }}
          $GOPATH/bin/transfer -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-ios-${{ matrix.target }}.7z
          
  Android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [armv7l, arm64, x86, x86_64]
    steps:          
      - name: prepare toolchain
        run: |
          sudo apt-get update -qq;
          sudo apt-get install -qq nasm p7zip-full;
      - name: Check out code 
        uses: actions/checkout@v2
        with:
          ref: master

      - name: build mpv
        run: |
          pwd
          ls -l
          cd android
          ./download.sh 
          ./buildall.sh --arch ${{ matrix.target }} mpv
          cd ..

      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          path: android/prefix/${{ matrix.target }}/lib/
          name: mpv-android-${{ matrix.target }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go

      - name: Build transfer command
        run: |
          git clone --depth=1 https://github.com/missdeer/transfer.git gopath
          cd gopath
          go get
          go build -ldflags="-s -w" -o bin/transfer
          cd ..

      - name: upload to own file server
        run: |
          export GOPATH=$PWD/gopath
          cd android/prefix/${{ matrix.target }}
          7z a mpv-android-${{ matrix.target }}.7z lib
          ls -l
          curl -X POST -H "Content-Type: multipart/form-data" -F "originalFile=@mpv-android-${{ matrix.target }}.7z" ${{ secrets.FILE_SERVER }}
          sudo sysctl -w net.core.rmem_max=2500000
          $GOPATH/bin/transfer -m upload -c ${{ secrets.FILE_SERVER3 }} -p quic mpv-android-${{ matrix.target }}.7z
