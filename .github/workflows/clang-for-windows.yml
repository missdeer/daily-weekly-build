name: Clang for Windows
on: 
  push:
    paths:
      - '.github/workflows/clang-for-windows.yml'
  pull_request:
    paths:
      - '.github/workflows/clang-for-windows.yml'
jobs:
  clang-for-windows-bootstrap:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - msvc_arch: x64
            clang_link: https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.5/LLVM-18.1.5-win64.exe
            compiler: clang-cl
    env:
      targetName: llvm-win-${{ matrix.msvc_arch }}
    steps:
      - name: Set up clang for Windows
        shell: cmd
        run: |
          mkdir llvm
          cd llvm
          curl.exe -o LLVM.exe -L ${{ matrix.clang_link }}
          7z.exe x LLVM.exe
          cd ..

      - name: Checkout llvm-project
        shell: cmd
        run: |
          git clone --depth=1 --single-branch --branch main https://github.com/llvm/llvm-project.git

      - name: build-msvc
        shell: cmd
        env:
          vc_arch: ${{ matrix.msvc_arch }}
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %vc_arch%
          set PATH=%CD%\llvm\bin;%PATH%
          mkdir -p llvm-project\build
          cd llvm-project\build
          set CC=${{ matrix.compiler }}
          set CXX=${{ matrix.compiler }}
          cmake.exe -GNinja -DCMAKE_C_COMPILER=${{ matrix.compiler }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=release -DLLVM_BUILD_TESTS=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld;mlir" -DLLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;openmp" -DLLVM_TARGETS_TO_BUILD=X86 -DCMAKE_C_FLAGS="/utf-8" -DCMAKE_CXX_FLAGS="/utf-8" -DCMAKE_INSTALL_PREFIX=llvm_win_bin -DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=ON -DLLVM_USE_INTEL_JITEVENTS=ON -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_LIBXML2=ON -DLLVM_ENABLE_ZLIB=ON -DLLVM_EXPORT_SYMBOLS_FOR_PLUGINS=ON -DLLVM_ENABLE_EH=ON -DLIBOMP_USE_QUAD_PRECISION=OFF ..\llvm
          ninja
          ninja install
          del /s /q *.obj
          del /s /q *.cpp
          del /s /q *.cxx

      - name: upload executable artifact
        uses: actions/upload-artifact@v1
        with:
          path: llvm-project\build\llvm_win_bin\bin
          name: llvm-win-${{ matrix.msvc_arch }}

      - name: upload devel artifact
        uses: actions/upload-artifact@v1
        with:
          path: llvm-project\build\llvm_win_bin\
          name: llvm-win-${{ matrix.msvc_arch }}-dev

